<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pengc的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cplo.github.io/"/>
  <updated>2018-06-22T05:32:52.627Z</updated>
  <id>https://cplo.github.io/</id>
  
  <author>
    <name>Pengc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Airflow概念</title>
    <link href="https://cplo.github.io/2018/06/22/airflow_concepts/"/>
    <id>https://cplo.github.io/2018/06/22/airflow_concepts/</id>
    <published>2018-06-22T05:32:52.627Z</published>
    <updated>2018-06-22T05:32:52.627Z</updated>
    
    <content type="html"><![CDATA[<h3 id="触发器规则"><a href="#触发器规则" class="headerlink" title="触发器规则"></a>触发器规则</h3><p>虽然正常的工作流是在任务的所有直接上游任务都成功时触发任务，但Airflow允许进行更复杂的依赖关系设置。 </p><p>所有的operators都有一个<strong><em>trigger_rule</em></strong>参数，它定义了生成的任务被触发的规则。 trigger_rule参数的默认值是all_success，定义为“当所有直接上游任务成功执行完成时触发此任务”。这里描述的所有其他规则都基于直接的父任务，并且这些值可以在创建任务时传递给任何operator：</p><ul><li>all_success: 所有父任务被成功执行（默认）</li><li>all_failed：所有父任务处于failed 或者 upstream_failed 状态</li><li>all_done：所有的父任务都完成了他们的执行</li><li>one_failed：当至少有一位父任务失败后会触发，不会等待所有父任务完成</li><li>one_success：当至少有一位父任务成功后会触发，并不等待所有的父任务完成</li><li>dummy：依赖关系仅用于显示，随意触发</li></ul><p>请注意，这些可以与depends_on_past（boolean）一起使用，当设置为True时，如果任务的上一个schedule计划未成功，则会阻止任务被触发。</p><h3 id="仅运行最新的schedule"><a href="#仅运行最新的schedule" class="headerlink" title="仅运行最新的schedule"></a>仅运行最新的schedule</h3><p>标准工作流程行为针对特定日期/时间范围运行一系列任务。但是，某些工作流执行独立于运行时间的任务，但需要按计划运行，与标准cron作业非常相似。这些情况下，在暂停期间回填或运行未命中的作业只会浪费CPU周期。</p><p>对于这种情况，您可以使用LatestOnlyOperator跳过在DAG的不在最近一次计划运行期间运行的任务。如果现在的时间不在其执行时间和下一个计划的执行时间之间，LatestOnlyOperator将跳过所有即时下游任务及其本身。</p><p>必须注意跳过的任务和触发规则之间的交互。任务跳过将传递通过这些触发规则：all_success和all_failed，all_done，one_failed，one_success和dummy不传递。如果您想使用带有不会传递跳转的触发器规则的LatestOnlyOperator，则需要确保LatestOnlyOperator直接位于您要跳过的任务的上游。</p><p>通过使用触发规则可以混合以典型的日期/时间依赖模式运行的任务和使用LatestOnlyOperator的任务。</p><p>例如，请考虑以下dag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#dags/latest_only_with_trigger.py</span><br><span class="line">import datetime as dt</span><br><span class="line"></span><br><span class="line">from airflow.models import DAG</span><br><span class="line">from airflow.operators.dummy_operator import DummyOperator</span><br><span class="line">from airflow.operators.latest_only_operator import LatestOnlyOperator</span><br><span class="line">from airflow.utils.trigger_rule import TriggerRule</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dag = DAG(</span><br><span class="line">    dag_id=&apos;latest_only_with_trigger&apos;,</span><br><span class="line">    schedule_interval=dt.timedelta(hours=4),</span><br><span class="line">    start_date=dt.datetime(2016, 9, 20),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">latest_only = LatestOnlyOperator(task_id=&apos;latest_only&apos;, dag=dag)</span><br><span class="line"></span><br><span class="line">task1 = DummyOperator(task_id=&apos;task1&apos;, dag=dag)</span><br><span class="line">task1.set_upstream(latest_only)</span><br><span class="line"></span><br><span class="line">task2 = DummyOperator(task_id=&apos;task2&apos;, dag=dag)</span><br><span class="line"></span><br><span class="line">task3 = DummyOperator(task_id=&apos;task3&apos;, dag=dag)</span><br><span class="line">task3.set_upstream([task1, task2])</span><br><span class="line"></span><br><span class="line">task4 = DummyOperator(task_id=&apos;task4&apos;, dag=dag,</span><br><span class="line">                      trigger_rule=TriggerRule.ALL_DONE)</span><br><span class="line">task4.set_upstream([task1, task2])</span><br></pre></td></tr></table></figure></p><p>在这个dag的情况下，latest_only任务将把除最近运行以外的所有运行显示为跳过的状态。 task1直接位于latest_only的下游，并且也会跳过除最新版本之外的所有运行。 task2完全独立于latest_only，并将在所有预定时段运行。 task3位于task1和task2的下游，并且由于默认的trigger_rule为all_success，因此将从task1接收传递跳过。 task4位于task1和task2的下游，但由于其trigger_rule设置为all_done，只要task1被跳过（一个有效的完成状态）并且task2成功，它就会立即触发。</p><p><img src="https://airflow.apache.org/_images/latest_only_with_trigger.png" alt="image"></p><p><a href="https://airflow.apache.org/concepts.html" target="_blank" rel="noopener">原文链接</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;触发器规则&quot;&gt;&lt;a href=&quot;#触发器规则&quot; class=&quot;headerlink&quot; title=&quot;触发器规则&quot;&gt;&lt;/a&gt;触发器规则&lt;/h3&gt;&lt;p&gt;虽然正常的工作流是在任务的所有直接上游任务都成功时触发任务，但Airflow允许进行更复杂的依赖关系设置。 &lt;/p&gt;
      
    
    </summary>
    
    
      <category term="airflow" scheme="https://cplo.github.io/tags/airflow/"/>
    
      <category term="翻译" scheme="https://cplo.github.io/tags/%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://cplo.github.io/2018/06/10/hello-world/"/>
    <id>https://cplo.github.io/2018/06/10/hello-world/</id>
    <published>2018-06-10T10:59:25.799Z</published>
    <updated>2018-06-10T10:59:25.800Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="hello" scheme="https://cplo.github.io/tags/hello/"/>
    
  </entry>
  
</feed>
